version: '3'

env:
  TITLE:  Utility Pod for Kubernetes

tasks:
  up:
    desc: Deploys {{.TITLE}} code
    cmds:
    - terraform workspace new {{.APP}} || true
    - terraform workspace select {{.APP}}
    - terraform init
    - task: apply
    - task: creds
    - task: deploy
    vars: 
      APP: '{{.CLI_ARGS}}'

  apply:
    desc: Applies Terraform 
    cmds:
    - terraform apply -auto-approve -var "application_name={{.APP}}" -compact-warnings
    vars: 
      APP: '{{.CLI_ARGS}}'

  creds:
    desc: Gets AKS Credential File
    cmds:
    - az aks get-credentials -g {{.RG}} -n {{.AKS}} --overwrite-existing
    - sed -i s/devicecode/azurecli/g ~/.kube/config
    vars:
      RG: 
        sh: terraform output -raw AKS_RESOURCE_GROUP
      AKS: 
        sh: terraform output -raw AKS_CLUSTER_NAME    

  deploy:
    desc: Deploys Utils pod via Helm
    cmds:
    - helm upgrade -i utils --set APP_NAME={{.APP_NAME}} --set ARM_WORKLOAD_APP_ID={{.ARM_WORKLOAD_APP_ID}} --set ARM_TENANT_ID={{.ARM_TENANT_ID}} ./chart
    vars:
      APP_NAME: 
        sh: terraform output -raw APP_NAME
      ARM_WORKLOAD_APP_ID: 
        sh: terraform output -raw ARM_WORKLOAD_APP_ID
      ARM_TENANT_ID:
        sh: terraform output -raw ARM_TENANT_ID

  down:
    desc: Destorys Azure infrastructure and cleans up terraform state files
    cmds:
    - terraform destory -auto-approve
    - rm -rf .terraform.lock.hcl .terraform terraform.tfstate terraform.tfstate.backup .terraform.tfstate.lock.info
    vars:
      RG: 
        sh: terraform output -raw AKS_RESOURCE_GROUP